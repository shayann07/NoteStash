// Generated by view binder compiler. Do not edit!
package com.example.note_takingapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.note_takingapp.R;
import com.google.android.material.appbar.AppBarLayout;
import com.google.android.material.appbar.MaterialToolbar;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.textfield.TextInputEditText;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityAddNoteBinding implements ViewBinding {
  @NonNull
  private final AppBarLayout rootView;

  @NonNull
  public final MaterialButton btnSave;

  @NonNull
  public final TextInputEditText etBody;

  @NonNull
  public final TextInputEditText etTitle;

  @NonNull
  public final MaterialToolbar topBar;

  private ActivityAddNoteBinding(@NonNull AppBarLayout rootView, @NonNull MaterialButton btnSave,
      @NonNull TextInputEditText etBody, @NonNull TextInputEditText etTitle,
      @NonNull MaterialToolbar topBar) {
    this.rootView = rootView;
    this.btnSave = btnSave;
    this.etBody = etBody;
    this.etTitle = etTitle;
    this.topBar = topBar;
  }

  @Override
  @NonNull
  public AppBarLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityAddNoteBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityAddNoteBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_add_note, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityAddNoteBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnSave;
      MaterialButton btnSave = ViewBindings.findChildViewById(rootView, id);
      if (btnSave == null) {
        break missingId;
      }

      id = R.id.etBody;
      TextInputEditText etBody = ViewBindings.findChildViewById(rootView, id);
      if (etBody == null) {
        break missingId;
      }

      id = R.id.etTitle;
      TextInputEditText etTitle = ViewBindings.findChildViewById(rootView, id);
      if (etTitle == null) {
        break missingId;
      }

      id = R.id.topBar;
      MaterialToolbar topBar = ViewBindings.findChildViewById(rootView, id);
      if (topBar == null) {
        break missingId;
      }

      return new ActivityAddNoteBinding((AppBarLayout) rootView, btnSave, etBody, etTitle, topBar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
